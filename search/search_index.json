{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>MxLint (Formerly Mendix-CLI) is a set of tools to help you build high quality Mendix apps. This is inspired by the success of projects like PyLint and other linting systems which provide a way to enforce code standards, best practices and guidelines in your code.</p>    Your browser does not support the video tag."},{"location":"#mission","title":"Mission","text":"<ul> <li>Become the standard for linting Mendix apps.</li> <li>Provide a way to enforce best practices and guidelines in your code.</li> <li>Provide a way to share knowledge and experience between developers.</li> </ul>"},{"location":"#ecosystem","title":"Ecosystem","text":"<p>Mxlint is a collection of tools and projects to help you build high quality Mendix apps.</p> <ul> <li>MxLint CLI: The main tool of the MxLint ecosystem. It is used to lint your Mendix project. Can be used directly as CLI tool or as part of a CI/CD pipeline.</li> <li>MxLint Extension: An extension for Mendix Studio Pro to help you lint your Mendix project during development.</li> <li>MxLint Rules: A place to find and share your rules with the community.</li> <li>MxLint Docs: This documentation you are reading right now. It also extracts documentation from the rules to provide you with a better experience in a single place.</li> </ul>"},{"location":"#bugs-and-contribution","title":"Bugs and Contribution","text":"<p>We welcome all to report bugs or even better contribute to MxLint. This can be done creating issues or Pull request towards the repositories listed above.</p>"},{"location":"#philosophy","title":"Philosophy","text":"<p>MxLint is built on the philosophy that the best way to build Mendix apps is to follow the best practices and guidelines that are outlined in the Mendix Best practices documentation and most importantly based on the community experience. The collective experience of the developers in the Mendix community is distilled into rules that are then enforced with formal rules.</p> <p>We also believe knowledge should be shared and that by sharing our experiences we can all learn from each other. Therefore we are aiming for this project to be a community driven project where we can all learn from each other. A project owned by the community and for the community. To live up to this goal we decided to make MxLint an open source project and we welcome contributions from the community. </p>"},{"location":"about/","title":"About","text":"<p>MxLint is an initiative of CINAQ. We believe the Mendix community can benefit from a set of tools to help them build high quality Mendix apps. Where knowledge is shared with everyone.</p>"},{"location":"about/#licensing","title":"Licensing","text":"<p>All MxLint related repositories are licensed under the AGPL-3.0 license. This means you have the right to use, modify, and distribute the software, as long as you comply with the terms of the license.</p>"},{"location":"about/#contributing","title":"Contributing","text":"<p>We welcome contributions to MxLint from the community. If you have an idea for a rule or a feature, please open an issue or submit a pull request. We are also happy to help you with your contribution.</p>"},{"location":"code-of-conduct/","title":"Code of Conduct","text":""},{"location":"code-of-conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"code-of-conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a professional setting</li> </ul>"},{"location":"code-of-conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p>"},{"location":"code-of-conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online</p>"},{"location":"features/","title":"Features","text":"<ul> <li>Convert mendix MPR format to Yaml files</li> <li>Check Mendix model against predefined rule-set</li> </ul>"},{"location":"quickstart/","title":"Quickstart","text":"<p>MxLint is very versatile. Try out with one of the following guides:</p> <ul> <li>Mendix Studio Pro Extension</li> <li>Pipeline Integration</li> </ul> <p>The CLI can be used or integrated in many different ways also. Feel free to share with us if your use case is not yet documented.</p>"},{"location":"terminologies/","title":"Terminologies","text":""},{"location":"terminologies/#rule","title":"Rule","text":"<p>A rule is a single unit of linting that checks for a specific issue in your Mendix project.</p>"},{"location":"terminologies/#ruleset","title":"Ruleset","text":"<p>A ruleset is a collection of rules that are used to lint a specific part of your Mendix project.</p>"},{"location":"terminologies/#linting","title":"Linting","text":"<p>Linting is the process of running a ruleset against a Mendix project to check for issues.</p>"},{"location":"terminologies/#policy","title":"Policy","text":"<p>In the context MxLint, policy is the same as a rule. You will see the terms policy and rule used interchangeably.</p>"},{"location":"use-cases/","title":"Use cases","text":"<p>Here we attempt to show you what you can accomplish with MxLint. It has many purposes thanks to the fact is works lightning fast and versatile.</p>"},{"location":"use-cases/#textual-revision-diff-ing","title":"Textual revision diff-ing","text":"<p>To compare model changes normally you need Mendix Studio Pro. With MxLint you can use any existing Merge request workflow to review model changes. Albeit in a textual instead of visual way:</p> <p></p> <p>Above use case is best when using the extension with your project in Mendix Studio Pro</p>"},{"location":"use-cases/#get-feedback-on-best-practices-in-studio-pro","title":"Get feedback on best practices in Studio Pro","text":"<p>With the new recent extensibility support in Mendix Studio pro, MxLint is closer than ever to you. With the extension, you get almost real-time feedback on your project quality. It does not use AI or LLM but old-school, objective and deterministic rules.</p> <p></p> <p>Start here with the extension</p>"},{"location":"use-cases/#enforce-best-practices-in-pipelines","title":"Enforce best practices in pipelines","text":"<p>In order to guard quality and maintainability of Mendix apps as a platform owner, you can build quality gates into your pipelines. This way you ensure minimum quality criterias are met as part of you CI/CD workflows.</p> <p></p> <p>Learn how this works in pipelines</p>"},{"location":"use-cases/#organizational-custom-best-practices","title":"Organizational custom best practices","text":"<p>As MxLint is Open source, the possibilities are endless. This means you are free and able to write your own custom rules. </p>"},{"location":"use-cases/#others","title":"Others","text":"<p>Do you use MxLint in other ways? Let us know.</p>"},{"location":"CLI/","title":"Introduction","text":""},{"location":"CLI/microflow-transformation/","title":"Microflow transformation","text":""},{"location":"CLI/microflow-transformation/#microflow-transformation","title":"Microflow Transformation","text":"<p>This document outlines the thought process and approach on how to transform a program (or function if you want) from a graph like format to as-linear-as-possible textual representation.</p>"},{"location":"CLI/microflow-transformation/#mendix-microflows-are-not-dags","title":"Mendix Microflows are not DAG's","text":"<p>Mendix Microflows are in abstract form a graph structure. For those warry of graph-theory, at first sight most graphs are Directed Acyclic Graph (DAG). Because there is a starting point and multiple end states. There is a minor detail: it's possible to create loops using <code>Exclusive Split</code> and <code>Exclusive Merge</code> actions. These are comparable to defining <code>labels</code> and <code>goto</code> in more classical programming languages.</p>"},{"location":"CLI/microflow-transformation/#goto","title":"Goto","text":""},{"location":"events/","title":"Introduction","text":"<p>This section gives an overview of all social events held in the past.</p>"},{"location":"events/2024-10-24-mendix-meetup/","title":"Mendix Meetup 2024-10-24","text":""},{"location":"events/2024-10-24-mendix-meetup/#agenda","title":"Agenda","text":"<ul> <li>Quality Driven Development Initiative \u2013 Xiwen Cheng (10min)</li> <li>ABN AMRO shares a story about balancing low-code, low-ops &amp; low risk and why they support the MxLint initiative - Bart Zantingh (20min)</li> <li>MxLint \u2013 Xiwen Cheng (25min)</li> </ul>"},{"location":"events/2024-10-24-mendix-meetup/#speakers","title":"Speakers","text":"<ul> <li>Bart Zantingh, Lead Mendix Developer, ABN AMRO</li> <li>Xiwen (Steven) Cheng, Cloud Architect, CINAQ</li> </ul>"},{"location":"events/2024-10-24-mendix-meetup/#video-recordings","title":"Video recordings","text":""},{"location":"events/2024-10-24-mendix-meetup/#quality-driven-development-initiative","title":"Quality Driven Development Initiative","text":"Your browser does not support the video tag."},{"location":"events/2024-10-24-mendix-meetup/#abn-amro-shares-a-story-about-balancing-low-code-low-ops-low-risk-and-why-they-support-the-mxlint-initiative","title":"ABN AMRO shares a story about balancing low-code, low-ops &amp; low risk and why they support the MxLint initiative","text":"Your browser does not support the video tag."},{"location":"events/2024-10-24-mendix-meetup/#mxlint","title":"MxLint","text":"Your browser does not support the video tag."},{"location":"mendix-documents/","title":"Introduction","text":"<p>This section gives an overview of different Mendix documents that are relevant to MxLint.</p> <p>You can use these documents to understand the structure of different types of Mendix documents. This will help you write rules for MxLint.</p>"},{"location":"mendix-documents/domain-model/","title":"Domain Model","text":""},{"location":"mendix-documents/domain-model/#example","title":"Example","text":"<pre><code>$Type: DomainModels$DomainModel\nAnnotations:\n- $Type: DomainModels$Annotation\n  Caption: \"This Domain model defines the data structure of this module. \\r\\n\\r\\nAdd\n    new entities and associations to define your database tables and their relations.\n    \\r\\nWe automatically provision the underlying database for you.\\r\\n\\r\\nTo define\n    in-memory data, you can turn off the 'persistable' property on the entity.\\r\\n\\r\\nMore\n    info: https://docs.mendix.com/refguide/domain-model\"\n  ExportLevel: Hidden\n  Width: 440\nAssociations: null\nCrossAssociations: null\nDocumentation: \"\"\nEntities:\n- $Type: DomainModels$EntityImpl\n  AccessRules:\n  - $Type: DomainModels$AccessRule\n    AllowCreate: false\n    AllowDelete: false\n    AllowedModuleRoles:\n    - MyFirstModule.User\n    DefaultMemberAccessRights: ReadOnly\n    Documentation: \"\"\n    MemberAccesses:\n    - $Type: DomainModels$MemberAccess\n      AccessRights: ReadOnly\n      Association: \"\"\n      Attribute: System.Image.PublicThumbnailPath\n    - $Type: DomainModels$MemberAccess\n      AccessRights: ReadOnly\n      Association: \"\"\n      Attribute: System.Image.EnableCaching\n    - $Type: DomainModels$MemberAccess\n      AccessRights: ReadOnly\n      Association: \"\"\n      Attribute: System.FileDocument.FileID\n    - $Type: DomainModels$MemberAccess\n      AccessRights: ReadOnly\n      Association: \"\"\n      Attribute: System.FileDocument.Name\n    - $Type: DomainModels$MemberAccess\n      AccessRights: ReadOnly\n      Association: \"\"\n      Attribute: System.FileDocument.DeleteAfterDownload\n    - $Type: DomainModels$MemberAccess\n      AccessRights: ReadOnly\n      Association: \"\"\n      Attribute: System.FileDocument.Contents\n    - $Type: DomainModels$MemberAccess\n      AccessRights: ReadOnly\n      Association: \"\"\n      Attribute: System.FileDocument.HasContents\n    - $Type: DomainModels$MemberAccess\n      AccessRights: ReadOnly\n      Association: \"\"\n      Attribute: System.FileDocument.Size\n    XPathConstraint: \"\"\n    XPathConstraintCaption: \"\"\n  Attributes: null\n  Documentation: \"\"\n  Events: null\n  ExportLevel: Hidden\n  Indexes: null\n  MaybeGeneralization:\n    $Type: DomainModels$Generalization\n    Generalization: System.Image\n  Name: Photo\n  Source: null\n  ValidationRules: null\n- $Type: DomainModels$EntityImpl\n  AccessRules:\n  - $Type: DomainModels$AccessRule\n    AllowCreate: false\n    AllowDelete: false\n    AllowedModuleRoles:\n    - MyFirstModule.User\n    DefaultMemberAccessRights: ReadOnly\n    Documentation: \"\"\n    MemberAccesses:\n    - $Type: DomainModels$MemberAccess\n      AccessRights: ReadOnly\n      Association: \"\"\n      Attribute: MyFirstModule.Bike.Name\n    - $Type: DomainModels$MemberAccess\n      AccessRights: ReadOnly\n      Association: \"\"\n      Attribute: MyFirstModule.Bike.PurchaseDate\n    - $Type: DomainModels$MemberAccess\n      AccessRights: ReadOnly\n      Association: \"\"\n      Attribute: MyFirstModule.Bike.VA_age\n    - $Type: DomainModels$MemberAccess\n      AccessRights: ReadOnly\n      Association: \"\"\n      Attribute: MyFirstModule.Bike.Year\n    XPathConstraint: \"\"\n    XPathConstraintCaption: \"\"\n  Attributes:\n  - $Type: DomainModels$Attribute\n    Documentation: \"\"\n    ExportLevel: Hidden\n    Name: Name\n    NewType:\n      $Type: DomainModels$StringAttributeType\n      Length: 200\n    Value:\n      $Type: DomainModels$StoredValue\n      DefaultValue: \"\"\n  - $Type: DomainModels$Attribute\n    Documentation: \"\"\n    ExportLevel: Hidden\n    Name: PurchaseDate\n    NewType:\n      $Type: DomainModels$DateTimeAttributeType\n      LocalizeDate: true\n    Value:\n      $Type: DomainModels$StoredValue\n      DefaultValue: \"\"\n  - $Type: DomainModels$Attribute\n    Documentation: \"\"\n    ExportLevel: Hidden\n    Name: VA_age\n    NewType:\n      $Type: DomainModels$IntegerAttributeType\n    Value:\n      $Type: DomainModels$CalculatedValue\n      Microflow: MyFirstModule.VA_Age\n      PassEntity: true\n  - $Type: DomainModels$Attribute\n    Documentation: \"\"\n    ExportLevel: Hidden\n    Name: Year\n    NewType:\n      $Type: DomainModels$IntegerAttributeType\n    Value:\n      $Type: DomainModels$StoredValue\n      DefaultValue: \"2010\"\n  Documentation: \"\"\n  Events: null\n  ExportLevel: Hidden\n  Indexes: null\n  MaybeGeneralization:\n    $Type: DomainModels$NoGeneralization\n    HasChangedByAttr: false\n    HasChangedDateAttr: false\n    HasCreatedDateAttr: false\n    HasOwnerAttr: false\n    Persistable: true\n  Name: Bike\n  Source: null\n  ValidationRules: null\n</code></pre>"},{"location":"mendix-studio-pro-extension/","title":"Introduction","text":"<p>MxLint can be used directly inside of the Mendix Studio Pro. This method gives Mendix Developers quick feedback on how well they are doing in terms of following the best practices.</p>"},{"location":"mendix-studio-pro-extension/#known-limitations","title":"Known limitations","text":"<ul> <li>Scanning takes a few seconds to complete and it depends on the size of the Mendix project and the number of rules</li> <li>Currently very limited configuration possible</li> <li>Probaly many more...</li> </ul>"},{"location":"mendix-studio-pro-extension/configuration/","title":"Configuration","text":"<p>Currently there are no customization possibilities.</p> <p>Well... there is one...</p>"},{"location":"mendix-studio-pro-extension/configuration/#custom-rules","title":"Custom rules","text":"<p>You can follow the instructions to create a custom rule. Custom rules can be added into <code>$project/.mendix-cache/rules/</code> directory. These will be picked up automatically by the MxLint Extension.</p>"},{"location":"mendix-studio-pro-extension/development/","title":"Development","text":""},{"location":"mendix-studio-pro-extension/development/#librariesreferences","title":"Libraries/References","text":"<p>We try to keep the number of dependencies to a minimum. But sometimes it is handy to re-use existing projects.</p> <ul> <li>MxLintExtension source code</li> <li>Pico CSS to help with styling.</li> </ul>"},{"location":"mendix-studio-pro-extension/development/#osx-macos","title":"OSX (MacOS)","text":"<ul> <li>Visual Studio Code</li> <li>Mendix Studio Pro 10.12.2</li> <li>dotNet core SDK vscode</li> <li>C# dev kit VSCode extension (inside of VSCode)</li> </ul>"},{"location":"mendix-studio-pro-extension/development/#build","title":"Build","text":"<pre><code>make\n</code></pre>"},{"location":"mendix-studio-pro-extension/development/#test","title":"Test","text":"<ul> <li>Open Mendix Studio Pro with <code>--enable-extension-development</code> flag: <code>/Applications/Studio\\ Pro\\ 10.12.2.41995-Beta.app/Contents/MacOS/studiopro --enable-extension-development</code></li> <li>Open local project located in <code>resources/App</code></li> </ul>"},{"location":"mendix-studio-pro-extension/development/#windows","title":"Windows","text":"<ul> <li>Visual Studio 2022</li> <li>Mendix Studio Pro 10.12.2</li> </ul> <p>Open <code>Powershell</code> as <code>Administrator</code> and run the following command:</p> <pre><code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned\n</code></pre>"},{"location":"mendix-studio-pro-extension/development/#build_1","title":"Build","text":"<ul> <li>Run the script to build: <pre><code>.\\dev\\build-windows.ps1\n</code></pre></li> </ul>"},{"location":"mendix-studio-pro-extension/development/#test_1","title":"Test","text":"<ul> <li>Open studiopro.exe with <code>--enable-extension-development</code> flag.</li> <li>Open local project located in <code>resources/App</code></li> </ul>"},{"location":"mendix-studio-pro-extension/installation/","title":"Installation","text":""},{"location":"mendix-studio-pro-extension/installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>Mendix Studio Pro 10.12.x or later (Windows only)</li> <li>an existing Mendix project</li> <li>Download a release</li> </ul> <p>The following two steps are needed for now because MxLint Extension is still in Beta. One day you will not need to do these anymore as an end-user. </p>"},{"location":"mendix-studio-pro-extension/installation/#allow-unsigned-code","title":"Allow unsigned code","text":"<p>MxLint-CLI is not signed yet. The extension automatically downloads the CLI and other dependencies. To allow CLI to run you must</p> <ul> <li>Open <code>Powershell</code> as <code>Administrator</code> and then run: <pre><code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned\n</code></pre></li> <li>After that reboot your machine</li> </ul> <p>Above should only be needed once.</p>"},{"location":"mendix-studio-pro-extension/installation/#enable-developer-extensions-in-studio-pro","title":"Enable Developer extensions in Studio Pro","text":"<p>Mendix Studio needs to be started with a special flag. To enable this:</p> <ul> <li>Create a shortcut to your Mendix Studio Pro if you don't have it on your desktop already</li> <li>Right click on the shortcut and choose <code>Properties</code></li> <li>In the <code>Target</code>, append the following string <code>--enable-extension-development</code> after the double quote. Make sure to have a space after this right most double quote.</li> </ul> <p>Now your Studio pro is ready to use Extensions.</p>"},{"location":"mendix-studio-pro-extension/installation/#steps","title":"Steps","text":"<p>The following must be done for each project you want to add this extension:</p> <ul> <li>Create a directory called <code>extensions</code> inside of your project directory</li> <li>Unpack the zipfile into the <code>extensions</code> directory. You will see a directory at <code>$project/extensions/MxLintExtension</code></li> <li>Open Mendix Studio pro with extension development flag</li> <li>Open your app</li> </ul>"},{"location":"mendix-studio-pro-extension/update-cli/","title":"Update CLI","text":"<p>Often mxlint-cli is updated before the extension is refreshed to the latest mxlint-cli version. You can use the latest version (assuming it's compatible) with the extension by following the steps:</p> <ul> <li>Download the CLI binary from https://github.com/mxlint/mxlint-cli/releases (You need the one with name that ends with windows-amd64.exe for windows)</li> <li>You will find a file with name <code>mxlint-local.exe</code> in <code>$project_dir/.mendix-cache/</code> directory. Delete <code>mxlint-local.exe</code></li> <li>Copy or move the new mxlint-cli to <code>$project_dir/.mendix-cache</code>. Make sure it's called <code>mxlint-local.exe</code></li> </ul> <p>No need to restart Mendix studio pro</p>"},{"location":"pipeline-integration/","title":"Introduction","text":"<p>While the Mendix Studio Pro extension enables you to get immediate feedback on your project quality as a developer, MxLint can also be used as governance tool.</p> <p>This can be achieved by for instance adding MxLint to your (existing) Continuous Integration pipelines. You can also choose to scan against a more extensive set of rules than locally on developer machines.</p> <p>The most important benefit of Pipeline integrations is to enable governance on a platform level. This ensures independent teams are following company standards and best practices centrally managed.</p>"},{"location":"pipeline-integration/setup/","title":"Setup","text":"<p>TODO</p>"},{"location":"pipeline-integration/setup/#gitlab","title":"Gitlab","text":""},{"location":"pipeline-integration/setup/#azure-devops","title":"Azure DevOps","text":""},{"location":"rules/","title":"Introduction","text":"<p>Linting rules are written in Rego and are used to lint Mendix projects.</p>"},{"location":"rules/create/","title":"Create Rule","text":""},{"location":"rules/create/#rego-introduction","title":"Rego Introduction","text":"<p>Rules are expressed with the help of the powerful OPA Rego language. Rego is a declarative language that is purpose-built for expressing policies over complex hierarchical data structures. Rego is designed to be easy to read and write, even for non-programmers. Rego is a safe language that is decidable and has a small trusted computing base. Rego is also designed to be easy to integrate with other systems.</p>"},{"location":"rules/create/#policy-rule","title":"Policy rule","text":"<p>To create a new policy, you need to create a new Rego file in the <code>policies</code> directory. The file name should be in the format <code>XXX_YYY.rego</code> where <code>XXX</code> is the policy number and <code>YYY</code> is the policy name. For example, <code>001_0001_anonymous_disabled.rego</code>.</p> <p>The policy file should contain the following structure:</p> 001_0001_anonymous_disabled.rego<pre><code># METADATA\n# scope: package\n# title: Business apps must always require login\n# description: No anonymous means every user must have valid login session or credentials\n# authors:\n# - Xiwen Cheng &lt;x@cinaq.com&gt;\n# custom:\n#  category: Security\n#  rulename: AnonymousDisabled\n#  severity: HIGH\n#  rulenumber: 001_0001\n#  remediation: Disable anonymous/guest access in Project Security\n#  input: Security$ProjectSecurity.yaml\npackage app.mendix.project_settings.anonymous_disabled\nimport rego.v1\nannotation := rego.metadata.chain()[1].annotations\n\ndefault allow := false\nallow if count(errors) == 0\n\nerrors contains error if {\n    input.EnableGuestAccess == true\n    error := sprintf(\"[%v, %v, %v] %v\",\n        [\n            annotation.custom.severity,\n            annotation.custom.category,\n            annotation.custom.rulenumber,\n            annotation.title,\n        ]\n    )\n}\n</code></pre> <ul> <li><code>METADATA</code> provide information about the policy. </li> <li><code>package</code> statement is used to define the policy package. </li> <li><code>allow</code> statement is used to define the conditions under which the policy is allowed. </li> <li><code>errors</code> statement is used to define the errors that are returned if the policy is not allowed.</li> <li><code>input</code> states which files are used as input for the policy. This can be a single file or an expression like <code>*/DomainModels$DomainModel.yaml</code> to match multiple files.</li> </ul>"},{"location":"rules/create/#policy-testing","title":"Policy testing","text":"<p>The best way to create a new policy is to copy an existing policy and modify it to suit your needs. There is also an accompanying test file for each policy that you can use to test your policy. The test file should be in the same directory as the policy file and should be named <code>XXX_YYY_test.rego</code>. For example, <code>001_0001_anonymous_disabled_test.rego</code>.</p> <pre><code>package app.mendix.project_settings.anonymous_disabled\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\"EnableGuestAccess\": false}\n}\ntest_no_allow if {\n    not allow with input as {\"EnableGuestAccess\": true}\n}\n</code></pre> <p>To test your policy, run the following command:</p> <pre><code>$ ./run-policy-tests.sh\npolicies/001_project_settings/001_0001_anonymous_disabled_test.rego:\ndata.app.mendix.project_settings.anonymous_disabled.test_allow: PASS (3.031209ms)\ndata.app.mendix.project_settings.anonymous_disabled.test_no_allow: PASS (413.375\u00b5s)\n\npolicies/001_project_settings/001_0002_demo_users_disabled_test.rego:\ndata.app.mendix.project_settings.demo_users_disabled.test_allow: PASS (105.541\u00b5s)\ndata.app.mendix.project_settings.demo_users_disabled.test_no_allow: PASS (200.5\u00b5s)\n\npolicies/001_project_settings/001_0003_security_checks_test.rego:\ndata.app.mendix.project_settings.security_checks.test_allow: PASS (111.584\u00b5s)\ndata.app.mendix.project_settings.security_checks.test_no_allow_1: PASS (842.667\u00b5s)\ndata.app.mendix.project_settings.security_checks.test_no_allow_2: PASS (206.458\u00b5s)\n\npolicies/001_project_settings/001_0004_strong_password_test.rego:\ndata.app.mendix.project_settings.strong_password.test_allow: PASS (148.792\u00b5s)\ndata.app.mendix.project_settings.strong_password.test_no_allow_password_length: PASS (538.959\u00b5s)\ndata.app.mendix.project_settings.strong_password.test_no_allow_simple: PASS (286.916\u00b5s)\n\npolicies/002_domain_model/002_0001_number_of_entities_test.rego:\ndata.app.mendix.domain_model.number_of_entities.test_no_entities: PASS (134\u00b5s)\ndata.app.mendix.domain_model.number_of_entities.test_1_entity: PASS (194.666\u00b5s)\ndata.app.mendix.domain_model.number_of_entities.test_2_entities: PASS (187.334\u00b5s)\ndata.app.mendix.domain_model.number_of_entities.test_20_entities: PASS (1.375709ms)\n\npolicies/002_domain_model/002_0002_number_of_attributes_test.rego:\ndata.app.mendix.domain_model.number_of_attributes.test_no_entities: PASS (263.5\u00b5s)\ndata.app.mendix.domain_model.number_of_attributes.test_1_entity_1_attribute: PASS (519.416\u00b5s)\ndata.app.mendix.domain_model.number_of_attributes.test_2_entities: PASS (303.458\u00b5s)\ndata.app.mendix.domain_model.number_of_attributes.test_3_entities_1_empty: PASS (342.958\u00b5s)\ndata.app.mendix.domain_model.number_of_attributes.test_1_entity_40_attributes_not_allowed: PASS (1.294166ms)\ndata.app.mendix.domain_model.number_of_attributes.test_2_entity_40_attributes_1_empty_not_allowed: PASS (2.156042ms)\n--------------------------------------------------------------------------------\nPASS: 20/20\n</code></pre> <p>The test rego files contain examples so that it's easy to validate your policy actually works for different scenarios with purpose-crafted input data. The test script will run all the test files in the <code>policies</code> directory and output the results.</p> <p>Example input could be inspected in the <code>modelsource</code> directory. The <code>modelsource</code> directory contains the exported Mendix model in Yaml format. The <code>modelsource</code> directory is created when you run the <code>export-model</code> command.</p>"},{"location":"rules/create/#resources","title":"Resources","text":"<ul> <li>Rego language reference</li> <li>Rego playground</li> <li>Rego testing</li> <li>Rego best practices</li> <li>Style guide</li> </ul>"},{"location":"rules/create/#help","title":"Help","text":"<p>We understand Rego is not the easiest language to use. However, it is the perfect match due to its expressiveness. If you need help creating a new policy, please reach out to us at support@cinaq.com.</p>"},{"location":"rules/001_project_settings/001_0001_anonymous_disabled/","title":"001_0001 - AnonymousDisabled","text":""},{"location":"rules/001_project_settings/001_0001_anonymous_disabled/#business-apps-must-always-require-login","title":"Business apps must always require login","text":"<p>Disable anonymous/guest access in Project Security</p>"},{"location":"rules/001_project_settings/001_0001_anonymous_disabled/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ninput: Security$ProjectSecurity.yaml\nrulename: AnonymousDisabled\nrulenumber: '001_0001'\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"rules/001_project_settings/001_0001_anonymous_disabled/#description","title":"Description","text":"<p>No anonymous means every user must have valid login session or credentials</p>"},{"location":"rules/001_project_settings/001_0001_anonymous_disabled/#remediation","title":"Remediation","text":"<p>Disable anonymous/guest access in Project Security</p>"},{"location":"rules/001_project_settings/001_0001_anonymous_disabled/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.project_settings.anonymous_disabled\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\"EnableGuestAccess\": false}\n}\ntest_no_allow if {\n    not allow with input as {\"EnableGuestAccess\": true}\n}\n</code></pre>"},{"location":"rules/001_project_settings/001_0002_demo_users_disabled/","title":"001_0002 - DemoUsersDisabled","text":""},{"location":"rules/001_project_settings/001_0002_demo_users_disabled/#business-apps-should-disable-demo-users","title":"Business apps should disable demo users","text":"<p>Disable demo users in Project Security</p>"},{"location":"rules/001_project_settings/001_0002_demo_users_disabled/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ninput: Security$ProjectSecurity.yaml\nrulename: DemoUsersDisabled\nrulenumber: '001_0002'\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"rules/001_project_settings/001_0002_demo_users_disabled/#description","title":"Description","text":"<p>No demo users</p>"},{"location":"rules/001_project_settings/001_0002_demo_users_disabled/#remediation","title":"Remediation","text":"<p>Disable demo users in Project Security</p>"},{"location":"rules/001_project_settings/001_0002_demo_users_disabled/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.project_settings.demo_users_disabled\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\"EnableDemoUsers\": false}\n}\ntest_no_allow if {\n    not allow with input as {\"EnableDemoUsers\": true}\n}\n</code></pre>"},{"location":"rules/001_project_settings/001_0003_security_checks/","title":"001_0003 - SecurityChecks","text":""},{"location":"rules/001_project_settings/001_0003_security_checks/#ensure-security-rules-are-active","title":"Ensure security rules are active","text":"<p>Set Security check to production in Project Security</p>"},{"location":"rules/001_project_settings/001_0003_security_checks/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ninput: Security$ProjectSecurity.yaml\nrulename: SecurityChecks\nrulenumber: '001_0003'\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"rules/001_project_settings/001_0003_security_checks/#description","title":"Description","text":"<p>Any serious app needs entity access security configured</p>"},{"location":"rules/001_project_settings/001_0003_security_checks/#remediation","title":"Remediation","text":"<p>Set Security check to production in Project Security</p>"},{"location":"rules/001_project_settings/001_0003_security_checks/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.project_settings.security_checks\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\n        \"CheckSecurity\": true,\n        \"SecurityLevel\": \"CheckEverything\",\n    }\n}\ntest_no_allow_1 if {\n    not allow with input as {\n        \"CheckSecurity\": false,\n        \"SecurityLevel\": \"CheckEverything\",\n    }\n}\ntest_no_allow_2 if {\n    not allow with input as {\n        \"CheckSecurity\": true,\n        \"SecurityLevel\": \"unknown\",\n    }\n}\n</code></pre>"},{"location":"rules/001_project_settings/001_0004_strong_password/","title":"001_0004 - StrongPasswordPolicy","text":""},{"location":"rules/001_project_settings/001_0004_strong_password/#strong-password-policy","title":"Strong password policy","text":"<p>Ensure minimum password length of at least 8 characters and must use all character classes.</p>"},{"location":"rules/001_project_settings/001_0004_strong_password/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ninput: Security$ProjectSecurity.yaml\npriority: 5\nrulename: StrongPasswordPolicy\nrulenumber: '001_0004'\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"rules/001_project_settings/001_0004_strong_password/#description","title":"Description","text":"<p>Bruteforce is quite common. Ensure passwords are very strong.</p>"},{"location":"rules/001_project_settings/001_0004_strong_password/#remediation","title":"Remediation","text":"<p>Ensure minimum password length of at least 8 characters and must use all character classes.</p>"},{"location":"rules/001_project_settings/001_0004_strong_password/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.project_settings.strong_password\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\n        \"PasswordPolicySettings\": {\n            \"MinimumLength\": 9,\n            \"RequireDigit\": true,\n            \"RequireSymbol\": true,\n            \"RequireMixedCase\": true,\n        }\n    }\n}\n\ntest_no_allow_password_length if {\n    not allow with input as {\n        \"PasswordPolicySettings\": {\n            \"MinimumLength\": 3,\n            \"RequireDigit\": true,\n            \"RequireSymbol\": true,\n            \"RequireMixedCase\": true,\n        }\n    }\n}\n\ntest_no_allow_simple if {\n    not allow with input as {\n        \"PasswordPolicySettings\": {\n            \"MinimumLength\": 3,\n            \"RequireDigit\": false,\n            \"RequireSymbol\": true,\n            \"RequireMixedCase\": false,\n        }\n    }\n}\n</code></pre>"},{"location":"rules/001_project_settings/001_0005_mxadmin_userid/","title":"001_0005 - MxAdminNotUsed","text":""},{"location":"rules/001_project_settings/001_0005_mxadmin_userid/#mendix-admin-userid-not-allowed-to-be-mxadmin","title":"Mendix Admin userid not allowed to be MxAdmin","text":"<p>Rename the mendix admin userid</p>"},{"location":"rules/001_project_settings/001_0005_mxadmin_userid/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Andre Luijkx\ncategory: Security\ninput: Security$ProjectSecurity.yaml\nrulename: MxAdminNotUsed\nrulenumber: '001_0005'\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"rules/001_project_settings/001_0005_mxadmin_userid/#description","title":"Description","text":"<p>Check the mendix admin userid and should not be default value (MxAdmin)</p>"},{"location":"rules/001_project_settings/001_0005_mxadmin_userid/#remediation","title":"Remediation","text":"<p>Rename the mendix admin userid</p>"},{"location":"rules/001_project_settings/001_0005_mxadmin_userid/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.project_settings.mxadmin_userid\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\"AdminUserName\": \"SystemAdmin\"}\n}\ntest_no_allow if {\n    not allow with input as {\"AdminUserName\": \"MxAdmin\"}\n}\n</code></pre>"},{"location":"rules/002_domain_model/002_0001_number_of_persistent_entities/","title":"002_0001 - NumberOfPersistantEntities","text":""},{"location":"rules/002_domain_model/002_0001_number_of_persistent_entities/#no-more-than-15-persistent-entities-within-one-domain-model","title":"No more than 15 persistent entities within one domain model","text":"<p>Split domain model into multiple modules.</p>"},{"location":"rules/002_domain_model/002_0001_number_of_persistent_entities/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\n- Andre Luijkx\ncategory: Maintainability\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: NumberOfPersistantEntities\nrulenumber: '002_0001'\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/002_domain_model/002_0001_number_of_persistent_entities/#description","title":"Description","text":"<p>The bigger the domain models, the harder they will be to maintain. It adds complexity to your security model as well. The smaller the modules, the easier to reuse.</p>"},{"location":"rules/002_domain_model/002_0001_number_of_persistent_entities/#remediation","title":"Remediation","text":"<p>Split domain model into multiple modules.</p>"},{"location":"rules/002_domain_model/002_0001_number_of_persistent_entities/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.domain_model.number_of_persistent_entities\nimport rego.v1\n\n\n# Test data\nentity_attr_0 = {\n    \"Name\": \"Entity1\",\n}\n\nnpe_entity_attr_0 = {\n    \"Name\": \"Entity1\",\n    \"MaybeGeneralization\": {\n        \"Persistable\": false,\n    }\n}\n\n\ntwenty := numbers.range(1, 20)\nentities_20 = [\n    { \"Name\": entity_attr_0.Name }  | n := twenty[_]\n]\n\nnpe_entities_20 = [\n    npe_entity_attr_0 | n := twenty[_]\n]\n\n# Test cases\ntest_no_entities if {\n    allow with input as {\"Entities\": null}\n}\n\ntest_1_entity if {\n    allow with input as {\"Entities\": [entity_attr_0]}\n}\n\ntest_2_entities if {\n    allow with input as {\"Entities\": [entity_attr_0, entity_attr_0]}\n}\n\ntest_2_entities_npe if {\n    allow with input as {\"Entities\": [entity_attr_0, npe_entity_attr_0]}\n}\n\ntest_20_entities if {\n    not allow with input as {\"Entities\": entities_20}\n}\n\ntest_20_npe_entities if {\n    allow with input as {\"Entities\": npe_entities_20 }\n}\n</code></pre>"},{"location":"rules/002_domain_model/002_0002_number_of_attributes/","title":"002_0002 - NumberOfAttributes","text":""},{"location":"rules/002_domain_model/002_0002_number_of_attributes/#no-more-that-35-attributes-in-an-entity","title":"No more that 35 attributes in an entity","text":"<p>Normalize your datamodel. Split your object into multiple objects. If the attributes really belong to each other in a one-to-one relation, just draw a one-to-one relation between the objects.</p>"},{"location":"rules/002_domain_model/002_0002_number_of_attributes/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Maintainability\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: NumberOfAttributes\nrulenumber: '002_0002'\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/002_domain_model/002_0002_number_of_attributes/#description","title":"Description","text":"<p>The bigger the entities, the slower your application will become when handling the data. This is because Mendix is using SELECT * queries a lot and will retrieve a lot of unnecessary data.</p>"},{"location":"rules/002_domain_model/002_0002_number_of_attributes/#remediation","title":"Remediation","text":"<p>Normalize your datamodel. Split your object into multiple objects. If the attributes really belong to each other in a one-to-one relation, just draw a one-to-one relation between the objects.</p>"},{"location":"rules/002_domain_model/002_0002_number_of_attributes/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.domain_model.number_of_attributes\nimport rego.v1\n\n\n# Test data\nattribute1 = {\n    \"Name\": \"Attribute1\"\n}\n\nentity_attr_0 = {\n    \"Name\": \"Entity1\",\n    \"Attributes\": null,\n}\n\nentity_attr_1 = {\n    \"Name\": \"Entity1\",\n    \"Attributes\": [\n        attribute1\n    ]\n}\n\nforty := numbers.range(1, 40)\nattributes_40 = [ \n    { \"Name\": attribute1.Name }  | n := forty[_]\n]\n\nentity_1_attr_40 = {\n    \"Name\": \"Entity1\",\n    \"Attributes\": attributes_40,\n}\n\n\n# Test cases\ntest_no_entities if {\n    allow with input as {\"Entities\": null}\n}\n\ntest_1_entity_1_attribute if {\n    allow with input as {\"Entities\": [entity_attr_1]}\n}\n\ntest_2_entities if {\n    allow with input as {\"Entities\": [entity_attr_1, entity_attr_1]}\n}\n\ntest_3_entities_1_empty if {\n    allow with input as {\"Entities\": [entity_attr_1, entity_attr_1, entity_attr_0]}\n}\n\ntest_1_entity_40_attributes_not_allowed if {\n    not allow with input as {\"Entities\": [entity_1_attr_40]}\n}\n\ntest_2_entity_40_attributes_1_empty_not_allowed if {\n    not allow with input as {\"Entities\": [entity_1_attr_40, entity_1_attr_40, entity_attr_0]}\n}\n</code></pre>"},{"location":"rules/002_domain_model/002_0003_inherit_from_administration_account/","title":"002_0003 - AvioidInheritanceFromAdministrationAccount","text":""},{"location":"rules/002_domain_model/002_0003_inherit_from_administration_account/#inherit-from-administrationaccount","title":"Inherit from Administration.Account","text":"<p>Inherit from system.user instead or adapt Administration.Account so it fits your needs.</p>"},{"location":"rules/002_domain_model/002_0003_inherit_from_administration_account/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Performance\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvioidInheritanceFromAdministrationAccount\nrulenumber: '002_0003'\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/002_domain_model/002_0003_inherit_from_administration_account/#description","title":"Description","text":"<p>There is no need to inherit from administration.account. Administration.account may simply be extended, this is not a system module. Avoid unnecessary inheritance as this has a negative effect on performance.</p>"},{"location":"rules/002_domain_model/002_0003_inherit_from_administration_account/#remediation","title":"Remediation","text":"<p>Inherit from system.user instead or adapt Administration.Account so it fits your needs.</p>"},{"location":"rules/002_domain_model/002_0003_inherit_from_administration_account/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.domain_model.inherit_from_administration_account\nimport rego.v1\n\n\n# Test data\nentity_negative = {\n    \"Name\": \"Entity1\",\n    \"MaybeGeneralization\": {\n        \"Type\": \"DomainModels$Generalization\",\n        \"Generalization\": \"System.FileDocument\"\n    }\n}\n\nentity_positive = {\n    \"Name\": \"Entity2\",\n    \"MaybeGeneralization\": {\n        \"Type\": \"DomainModels$Generalization\",\n        \"Generalization\": \"Administration.Account\"\n    }\n}\n\n\nentities_mixed = [entity_negative, entity_positive]\n\n\n# Test cases\ntest_no_entities if {\n    allow with input as {\"Entities\": null}\n}\n\ntest_entity_negative if {\n    allow with input as {\"Entities\": [entity_negative]}\n}\n\ntest_entity_positive if {\n    not allow with input as {\"Entities\": [entity_positive]}\n}\n\ntest_entities_mixed if {\n    not allow with input as {\"Entities\": entities_mixed}\n}\n</code></pre>"},{"location":"rules/002_domain_model/002_0004_inherit_from_non_system/","title":"002_0004 - AvoidInheritanceFromNonSystem","text":""},{"location":"rules/002_domain_model/002_0004_inherit_from_non_system/#inherit-from-non-system-module-is-discouraged","title":"Inherit from non System module is discouraged","text":"<p>Instead of inheritance, just use separate objects which are associated to the main object. As an alternative, you can add the child\u2019s attributes to the super entity and add an ObjectType enumeration.</p>"},{"location":"rules/002_domain_model/002_0004_inherit_from_non_system/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Performance\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvoidInheritanceFromNonSystem\nrulenumber: '002_0004'\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/002_domain_model/002_0004_inherit_from_non_system/#description","title":"Description","text":"<p>Inheritance, except from system module, is strongly discouraged because of the negative performance side effects.</p>"},{"location":"rules/002_domain_model/002_0004_inherit_from_non_system/#remediation","title":"Remediation","text":"<p>Instead of inheritance, just use separate objects which are associated to the main object. As an alternative, you can add the child\u2019s attributes to the super entity and add an ObjectType enumeration.</p>"},{"location":"rules/002_domain_model/002_0004_inherit_from_non_system/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.domain_model.inherit_from_non_system\nimport rego.v1\n\n\n# Test data\nentity_negative = {\n    \"Name\": \"Entity1\",\n    \"MaybeGeneralization\": {\n        \"Type\": \"DomainModels$Generalization\",\n        \"Generalization\": \"System.FileDocument\"\n    }\n}\n\nentity_positive = {\n    \"Name\": \"Entity2\",\n    \"MaybeGeneralization\": {\n        \"Type\": \"DomainModels$Generalization\",\n        \"Generalization\": \"Administration.Account\"\n    }\n}\n\n\nentities_mixed = [entity_negative, entity_positive]\n\n\n# Test cases\ntest_no_entities if {\n    allow with input as {\"Entities\": null}\n}\n\ntest_entity_negative if {\n    allow with input as {\"Entities\": [entity_negative]}\n}\n\ntest_entity_positive if {\n    not allow with input as {\"Entities\": [entity_positive]}\n}\n\ntest_entities_mixed if {\n    not allow with input as {\"Entities\": entities_mixed}\n}\n</code></pre>"},{"location":"rules/002_domain_model/002_0005_avoid_system_entity_association/","title":"002_0005 - AvoidSystemEntityAssociation","text":""},{"location":"rules/002_domain_model/002_0005_avoid_system_entity_association/#avoid-using-system-storage-objects-directly","title":"Avoid using system storage objects directly","text":"<p>Remove direct associations with the System Domain Model. Use inheritance instead (i.e. Generalization in the entity properties).</p>"},{"location":"rules/002_domain_model/002_0005_avoid_system_entity_association/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvoidSystemEntityAssociation\nrulenumber: '002_0005'\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"rules/002_domain_model/002_0005_avoid_system_entity_association/#description","title":"Description","text":"<p>Always inherit for filedocuments and images. Never implement direct assocations to the System Domain Model, because of limits on the configuration of security.</p>"},{"location":"rules/002_domain_model/002_0005_avoid_system_entity_association/#remediation","title":"Remediation","text":"<p>Remove direct associations with the System Domain Model. Use inheritance instead (i.e. Generalization in the entity properties).</p>"},{"location":"rules/002_domain_model/002_0005_avoid_system_entity_association/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.domain_model.avoid_system_entity_association\nimport rego.v1\n\n\n# Test data\nnegative = {\n    \"Name\": \"HELLO_THERE1\",\n    \"Child\": \"SomeModule.FileDocument\",\n}\n\npositive = {\n    \"Name\": \"HELLO_THERE2\",\n    \"Child\": \"System.FileDocument\",\n}\n\n\n# Test cases\n\ntest_no_cross_associations if {\n    allow with input as {\"CrossAssociations\": null}\n}\n\ntest_negative if {\n    allow with input as {\"CrossAssociations\": [negative]}\n}\n\ntest_positive if {\n    not allow with input as {\"CrossAssociations\": [positive]}\n}\n\ntest_mixed if {\n    not allow with input as {\"CrossAssociations\": [negative, positive]}\n}\n</code></pre>"},{"location":"rules/002_domain_model/002_0006_avoid_too_many_virtual_attributes/","title":"002_0006 - AvoidTooManyVirtualAttributes","text":""},{"location":"rules/002_domain_model/002_0006_avoid_too_many_virtual_attributes/#too-many-microflow-attributes-virtual-attributes-inside-of-an-entity","title":"Too many Microflow attributes (virtual attributes) inside of an entity","text":"<p>Optimize the number of virtual attributes inside of an entity. Reduce to 10 or less.</p>"},{"location":"rules/002_domain_model/002_0006_avoid_too_many_virtual_attributes/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Performance\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvoidTooManyVirtualAttributes\nrulenumber: '002_0006'\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/002_domain_model/002_0006_avoid_too_many_virtual_attributes/#description","title":"Description","text":"<p>Too many Microflow attributes (virtual attributes) inside of an entity will cause performance issues.</p>"},{"location":"rules/002_domain_model/002_0006_avoid_too_many_virtual_attributes/#remediation","title":"Remediation","text":"<p>Optimize the number of virtual attributes inside of an entity. Reduce to 10 or less.</p>"},{"location":"rules/002_domain_model/002_0006_avoid_too_many_virtual_attributes/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.domain_model.avoid_too_many_virtual_attributes\n\nimport rego.v1\n\n\n# Test data\n\n\nattr_0 := {\n          \"$Type\": \"DomainModels$Attribute\",\n          \"Name\": \"VA_age\",\n          \"Value\": {\n            \"$Type\": \"DomainModels$CalculatedValue\"\n          }\n}\n\n\ntwenty := numbers.range(1, 20)\nattr_20 = [ \n    { \"Name\": attr_0.Name, \"Value\": attr_0.Value }  | n := twenty[_]\n]\n\npositive := {\n  \"Entities\": [\n    {\n      \"$Type\": \"DomainModels$EntityImpl\",\n      \"Attributes\": [\n        {\n          \"$Type\": \"DomainModels$Attribute\",\n          \"Name\": \"VA_age\",\n          \"Value\": {\n            \"$Type\": \"DomainModels$CalculatedValue\"\n          }\n        },\n        {\n          \"$Type\": \"DomainModels$Attribute\",\n          \"Name\": \"Year\",\n          \"Value\": {\n            \"$Type\": \"DomainModels$StoredValue\"\n          }\n        }\n      ],\n      \"Name\": \"Bike\"\n    }\n  ]\n}\n\nnegative := {\n  \"Entities\": [\n    {\n      \"$Type\": \"DomainModels$EntityImpl\",\n      \"Attributes\": attr_20,\n      \"Name\": \"Bike\"\n    }\n  ]\n}\n\n# Test cases\n\ntest_positive if {\n    allow with input as positive\n}\n\ntest_negative if {\n    not allow with input as negative\n}\n</code></pre>"},{"location":"rules/002_domain_model/002_0007_avoid_using_validation_rules/","title":"002_0007 - AvoidUsingValidationRules","text":""},{"location":"rules/002_domain_model/002_0007_avoid_using_validation_rules/#avoid-using-validation-rules-for-domain-model","title":"Avoid using validation rules for domain model.","text":"<p>Remove datamodel validation rules.</p>"},{"location":"rules/002_domain_model/002_0007_avoid_using_validation_rules/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Viktor Berlov &lt;viktor@cinaq.com&gt;\ncategory: Maintainability\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvoidUsingValidationRules\nrulenumber: '002_0007'\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/002_domain_model/002_0007_avoid_using_validation_rules/#description","title":"Description","text":"<p>Validation rules on domain model level will give the users unexpected errors.</p>"},{"location":"rules/002_domain_model/002_0007_avoid_using_validation_rules/#remediation","title":"Remediation","text":"<p>Remove datamodel validation rules.</p>"},{"location":"rules/002_domain_model/002_0007_avoid_using_validation_rules/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.domain_model.avoid_using_validation_rules\n\nimport rego.v1\n\n\n# Test data\n\npositive := {\n  \"Entities\": [\n    {\n      \"ValidationRules\": [],\n      \"Name\": \"Bike\"\n    }\n  ]\n}\n\nnegative := {\n  \"Entities\": [\n    {\n      \"ValidationRules\": [\n        {\n          \"$Type\": \"DomainModels$ValidationRule\",\n          \"Attribute\": \"MyFirstModule.Bike.Name\",\n          \"Message\": {\n            \"$Type\": \"Texts$Text\",\n            \"Items\": [\n              {\n                \"$Type\": \"Texts$Translation\",\n                \"LanguageCode\": \"en_US\",\n                \"Text\": \"Not a good name\"\n              }\n            ]\n          },\n          \"RuleInfo\": {\n            \"$Type\": \"DomainModels$EqualsToRuleInfo\",\n            \"EqualsToAttribute\": \"\",\n            \"UseValue\": true,\n            \"Value\": \"admin\"\n          }\n        }\n      ],\n      \"Name\": \"Bike\"\n    }\n  ]\n}\n\n# Test cases\n\ntest_positive if {\n    allow with input as positive\n}\n\ntest_negative if {\n    not allow with input as negative\n}\n</code></pre>"},{"location":"rules/003_modules/003_0001_number_of_modules/","title":"003_0001 - NumberOfModules","text":""},{"location":"rules/003_modules/003_0001_number_of_modules/#more-than-20-modules-in-project","title":"More than 20 modules in project","text":"<p>Consider a multi-app stategy to avoid creating one big (unmaintainable) monstrous application.</p>"},{"location":"rules/003_modules/003_0001_number_of_modules/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Maintainability\ninput: Metadata.yaml\nrulename: NumberOfModules\nrulenumber: '003_0001'\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/003_modules/003_0001_number_of_modules/#description","title":"Description","text":"<p>The bigger the application, the harder to maintain.</p>"},{"location":"rules/003_modules/003_0001_number_of_modules/#remediation","title":"Remediation","text":"<p>Consider a multi-app stategy to avoid creating one big (unmaintainable) monstrous application.</p>"},{"location":"rules/003_modules/003_0001_number_of_modules/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.modules.number_of_modules\nimport rego.v1\n\n\n# Test data\nmodule = {\n    \"Name\": \"Module\",\n    \"Attributes\": {\n        \"FromAppStore\": false,\n    }\n}\n\n\nthirty := numbers.range(1, 30)\nmodules_30 = [ \n    module | n := thirty[_]\n]\n\n\n# Test cases\ntest_empty if {\n    allow with input as {\"Modules\": null}\n}\n\ntest_1_module if {\n    allow with input as {\"Modules\": [module]}\n}\n\ntest_2_modules if {\n    allow with input as {\"Modules\": [module, module]}\n}\n\ntest_30_modules if {\n    not allow with input as {\"Modules\": modules_30}\n}\n</code></pre>"},{"location":"rules/004_pages/004_0001_inline_style_property_used/","title":"004_0001 - InlineStylePropertyUsed","text":""},{"location":"rules/004_pages/004_0001_inline_style_property_used/#inline-style-property-used","title":"Inline style property used","text":"<p>Use generic classes instead, defined by the theme.</p>"},{"location":"rules/004_pages/004_0001_inline_style_property_used/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Maintainability\ninput: '**/*$Page.yaml'\nrulename: InlineStylePropertyUsed\nrulenumber: '004_0001'\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/004_pages/004_0001_inline_style_property_used/#description","title":"Description","text":"<p>Avoid using the style property, because this will make the life of your UI designer a lot more complicated. It will be harder to overrule styles from CSS file level.</p>"},{"location":"rules/004_pages/004_0001_inline_style_property_used/#remediation","title":"Remediation","text":"<p>Use generic classes instead, defined by the theme.</p>"},{"location":"rules/004_pages/004_0001_inline_style_property_used/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.pages.inline_style_property_used\nimport rego.v1\n\n\n# Test data\nform_simple = {\n    \"$Type\": \"Forms$Page\",\n    \"Name\": \"Page1\",\n    \"Appearance\": {\n        \"$Type\": \"Forms$Appearance\",\n        \"Class\": \"\",\n        \"DesignProperties\": null,\n        \"DynamicClasses\": \"\",\n        \"Style\": \"\",\n    },\n}\nform_simple_negative = {\n    \"$Type\": \"Forms$Page\",\n    \"Name\": \"Page1\",\n    \"Appearance\": {\n        \"$Type\": \"Forms$Appearance\",\n        \"Class\": \"\",\n        \"DesignProperties\": null,\n        \"DynamicClasses\": \"\",\n        \"Style\": \"color: red;\",\n    },\n}\n\nform_nested = {\n    \"Name\": \"Page1\",\n    \"FormCall\": {\n        \"Arguments\": [\n            {\n                \"Widgets\": [\n                    {\n                        \"$Type\": \"Forms$LayoutGrid\",\n                        \"Name\": \"layoutGrid2\",\n                        \"Rows\": [\n                            {\n                                \"$Type\": \"Forms$LayoutGridRow\",\n                                \"Columns\": [\n                                    {\n                                        \"$Type\": \"Forms$LayoutGridColumn\",\n                                        \"Appearance\": {\n                                            \"$Type\": \"Forms$Appearance\",\n                                            \"Class\": \"\",\n                                            \"DesignProperties\": null,\n                                            \"DynamicClasses\": \"\",\n                                            \"Style\": \"\",\n                                        }\n                                    },\n                                ],\n                            },\n                        ],\n                    },\n                ],\n            },\n        ],\n    },\n}\n\nform_nested_negative = {\n    \"Name\": \"Page1\",\n    \"FormCall\": {\n        \"Arguments\": [\n            {\n                \"Widgets\": [\n                    {\n                        \"$Type\": \"Forms$LayoutGrid\",\n                        \"Name\": \"layoutGrid2\",\n                        \"Rows\": [\n                            {\n                                \"$Type\": \"Forms$LayoutGridRow\",\n                                \"Columns\": [\n                                    {\n                                        \"$Type\": \"Forms$LayoutGridColumn\",\n                                        \"Appearance\": {\n                                            \"$Type\": \"Forms$Appearance\",\n                                            \"Class\": \"\",\n                                            \"DesignProperties\": null,\n                                            \"DynamicClasses\": \"\",\n                                            \"Style\": \"color: orange;\",\n                                        }\n                                    },\n                                ],\n                            },\n                        ],\n                    },\n                ],\n            },\n        ],\n    },\n}\n\n\n\n# Test cases\ntest_simple if {\n    allow with input as form_simple\n}\n\ntest_simple_negative if {\n    not allow with input as form_simple_negative\n}\n\ntest_nested if {\n    allow with input as form_nested\n}\n\ntest_nested_negative if {\n    not allow with input as form_nested_negative\n}\n</code></pre>"},{"location":"rules/005_microflows/005_0001_empty_string_check_not_complete/","title":"005_0001 - EmptyStringCheckNotComplete","text":""},{"location":"rules/005_microflows/005_0001_empty_string_check_not_complete/#empty-string-check-not-complete","title":"Empty String check not complete","text":"<p>Always check a string for empty based on != empty and != \"\". The first one equals database NULL value, the latter one indicates a truncated string.</p>"},{"location":"rules/005_microflows/005_0001_empty_string_check_not_complete/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Error\ninput: '**/*$Microflow.yaml'\nrulename: EmptyStringCheckNotComplete\nrulenumber: '005_0001'\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/005_microflows/005_0001_empty_string_check_not_complete/#description","title":"Description","text":"<p>Technically, there is a difference between empty and \"\". Make sure to check them both.</p>"},{"location":"rules/005_microflows/005_0001_empty_string_check_not_complete/#remediation","title":"Remediation","text":"<p>Always check a string for empty based on != empty and != \"\". The first one equals database NULL value, the latter one indicates a truncated string.</p>"},{"location":"rules/005_microflows/005_0001_empty_string_check_not_complete/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.microflows.empty_string_check_not_complete\nimport rego.v1\n\n\n# Test data\nmicroflow_good = {\n    \"$Type\": \"Microflow$Page\",\n    \"Name\": \"mf1\",\n    \"ObjectCollection\": {\n        \"$Type\": \"Microflows$MicroflowObjectCollection\",\n        \"Objects\": [\n            {\n                \"$Type\": \"Microflows$ExclusiveSplit\",\n                \"SplitCondition\": {\n                    \"$Type\": \"Microflows$ExpressionSplitCondition\",\n                    \"Expression\": \"$Variable != empty and $Variable != ''\",\n                },\n            },\n        ],\n    },\n}\n\nmicroflow_bad = {\n    \"$Type\": \"Microflow$Page\",\n    \"Name\": \"mf1\",\n    \"ObjectCollection\": {\n        \"$Type\": \"Microflows$MicroflowObjectCollection\",\n        \"Objects\": [\n            {\n                \"$Type\": \"Microflows$ExclusiveSplit\",\n                \"SplitCondition\": {\n                    \"$Type\": \"Microflows$ExpressionSplitCondition\",\n                    \"Expression\": \"$Variable != ''\",\n                },\n            },\n        ],\n    },\n}\n\n# Test cases\ntest_simple if {\n    allow with input as microflow_good\n}\n\ntest_simple_negative if {\n    not allow with input as microflow_bad\n}\n</code></pre>"},{"location":"rules/005_microflows/005_0002_commit_actions_with_a_loop/","title":"005_0002 - AvoidCommitInLoop","text":""},{"location":"rules/005_microflows/005_0002_commit_actions_with_a_loop/#commit-actions-with-a-loop","title":"Commit actions with a loop","text":"<p>Consider committing objects outside the loop. Within the loop, add them to a list.</p>"},{"location":"rules/005_microflows/005_0002_commit_actions_with_a_loop/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Viktor Berlov &lt;viktor@cinaq.com&gt;\ncategory: Microflows\ninput: '**/*$Microflow.yaml'\nrulename: AvoidCommitInLoop\nrulenumber: '005_0002'\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/005_microflows/005_0002_commit_actions_with_a_loop/#description","title":"Description","text":"<p>Commiting objects within a loop will fire a SQL Update query for each iteration.</p>"},{"location":"rules/005_microflows/005_0002_commit_actions_with_a_loop/#remediation","title":"Remediation","text":"<p>Consider committing objects outside the loop. Within the loop, add them to a list.</p>"},{"location":"rules/005_microflows/005_0002_commit_actions_with_a_loop/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.microflows.commit_actions_with_a_loop_test\n\nimport data.app.mendix.microflows.commit_actions_with_a_loop\nimport rego.v1\n\n# Test data\nloop_commit_good_empty_objects := {\n    \"$Type\": \"Microflow$Microflow\",\n    \"Name\": \"MicroflowForLoop\",\n    \"MainFunction\": [{\"Attributes\": {\n        \"$Type\": \"Microflows$LoopedActivity\",\n        \"ObjectCollection\": {\n            \"$Type\": \"Microflows$MicroflowObjectCollection\",\n            \"Objects\": null,\n        },\n    }}],\n}\n\nloop_commit_good_objects := {\n    \"$Type\": \"Microflow$Microflow\",\n    \"Name\": \"MicroflowForLoop\",\n    \"MainFunction\": [{\"Attributes\": {\n        \"$Type\": \"Microflows$LoopedActivity\",\n        \"ObjectCollection\": {\n            \"$Type\": \"Microflows$MicroflowObjectCollection\",\n            \"Objects\": [{\n                \"$Type\": \"Microflows$ActionActivity\",\n                \"Action\": {\n                    \"$Type\": \"Microflows$ChangeAction\",\n                    \"Commit\": \"No\",\n                },\n            }],\n        },\n    }}],\n}\n\nloop_commit_bad_commit_action := {\n    \"$Type\": \"Microflow$Microflow\",\n    \"Name\": \"MicroflowForLoop\",\n    \"MainFunction\": [{\"Attributes\": {\n        \"$Type\": \"Microflows$LoopedActivity\",\n        \"ObjectCollection\": {\n            \"$Type\": \"Microflows$MicroflowObjectCollection\",\n            \"Objects\": [{\n                \"$Type\": \"Microflows$ActionActivity\",\n                \"Action\": {\"$Type\": \"Microflows$CommitAction\"},\n            }],\n        },\n    }}],\n}\n\nloop_commit_bad_change_action := {\n    \"$Type\": \"Microflow$Microflow\",\n    \"Name\": \"MicroflowForLoop\",\n    \"MainFunction\": [{\"Attributes\": {\n        \"$Type\": \"Microflows$LoopedActivity\",\n        \"ObjectCollection\": {\n            \"$Type\": \"Microflows$MicroflowObjectCollection\",\n            \"Objects\": [{\n                \"$Type\": \"Microflows$ActionActivity\",\n                \"Action\": {\n                    \"$Type\": \"Microflows$ChangeAction\",\n                    \"Commit\": \"Yes\",\n                },\n            }],\n        },\n    }}],\n}\n\nloop_commit_bad_all := {\n    \"$Type\": \"Microflow$Microflow\",\n    \"Name\": \"MicroflowForLoop\",\n    \"MainFunction\": [{\"Attributes\": {\n        \"$Type\": \"Microflows$LoopedActivity\",\n        \"ObjectCollection\": {\n            \"$Type\": \"Microflows$MicroflowObjectCollection\",\n            \"Objects\": [\n                {\n                    \"$Type\": \"Microflows$ActionActivity\",\n                    \"Action\": {\"$Type\": \"Microflows$CommitAction\"},\n                },\n                {\n                    \"$Type\": \"Microflows$ActionActivity\",\n                    \"Action\": {\n                        \"$Type\": \"Microflows$ChangeAction\",\n                        \"Commit\": \"Yes\",\n                    },\n                },\n            ],\n        },\n    }}],\n}\n\n# Test cases\ntest_loop_commit_good if {\n    commit_actions_with_a_loop.allow with input as loop_commit_good_empty_objects\n    commit_actions_with_a_loop.allow with input as loop_commit_good_objects\n}\n\ntest_loop_commit_bad if {\n    not commit_actions_with_a_loop.allow with input as loop_commit_bad_commit_action\n    not commit_actions_with_a_loop.allow with input as loop_commit_bad_change_action\n    not commit_actions_with_a_loop.allow with input as loop_commit_bad_all\n}\n</code></pre>"}]}