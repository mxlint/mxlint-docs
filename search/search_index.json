{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>MxLint (Formerly Mendix-CLI) is a set of tools to help you build high quality Mendix apps. This is inspired by the success of projects like SonarQube and other linting systems which provide a way to enforce best practices and guidelines in your code.</p>"},{"location":"#mission","title":"Mission","text":"<ul> <li>Become the standard for linting Mendix apps.</li> <li>Provide a way to enforce best practices and guidelines in your code.</li> <li>Provide a way to share knowledge and experience between developers.</li> <li>Provide a way to learn from each other.</li> <li>Provide a way to contribute to the Mendix community.</li> </ul>"},{"location":"#ecosystem","title":"Ecosystem","text":"<p>Mxlint is a collection of tools and projects to help you build high quality Mendix apps.</p> <ul> <li>MxLint CLI: The main tool of the MxLint ecosystem. It is used to lint your Mendix project. Can be used directly as CLI tool or as part of a CI/CD pipeline.</li> <li>MxLint Extension: An extension for Mendix Studio Pro to help you lint your Mendix project during development.</li> <li>MxLint Rules: A place to share your rules with the community.</li> <li>MxLint Docs: This documentation you are reading right now. It also extracts documentation from the rules to provide you with a better experience in a single place.</li> </ul>"},{"location":"#philosophy","title":"Philosophy","text":"<p>MxLint is built on the philosophy that the best way to build Mendix apps is to follow the best practices and guidelines that are outlined in the Mendix Best practices documentation and most importantly based on the community experience. The collective experience of the developers in the Mendix community is distilled into rules that are then enforced with formal rules.</p> <p>We also believe knowledge should be shared and that by sharing our experiences we can all learn from each other. Therefore we are aiming for this project to be a community driven project where we can all learn from each other. A project owned by the community and for the community. To live up to this goal we decided to make MxLint an open source project and we welcome contributions from the community. </p>"},{"location":"about/","title":"About","text":"<p>mxlint and its ecosystem is an initiative of CINAQ. </p>"},{"location":"quickstart/","title":"Quickstart","text":""},{"location":"quickstart/#installation","title":"Installation","text":""},{"location":"terminologies/","title":"Terminologies","text":""},{"location":"terminologies/#rule","title":"Rule","text":"<p>A rule is a single unit of linting that checks for a specific issue in your Mendix project.</p>"},{"location":"terminologies/#ruleset","title":"Ruleset","text":"<p>A ruleset is a collection of rules that are used to lint a specific part of your Mendix project.</p>"},{"location":"terminologies/#linting","title":"Linting","text":"<p>Linting is the process of running a ruleset against a Mendix project to check for issues.</p>"},{"location":"Command%20Line%20Interface%20%28CLI%29/","title":"Introduction","text":""},{"location":"Command%20Line%20Interface%20%28CLI%29/microflow-transformation/","title":"Microflow transformation","text":""},{"location":"Command%20Line%20Interface%20%28CLI%29/microflow-transformation/#microflow-transformation","title":"Microflow Transformation","text":"<p>This document outlines the thought process and approach on how to transform a program (or function if you want) from a graph like format to as-linear-as-possible textual representation.</p>"},{"location":"Command%20Line%20Interface%20%28CLI%29/microflow-transformation/#mendix-microflows-are-not-dags","title":"Mendix Microflows are not DAG's","text":"<p>Mendix Microflows are in abstract form a graph structure. For those warry of graph-theory, at first sight most graphs are Directed Acyclic Graph (DAG). Because there is a starting point and multiple end states. There is a minor detail: it's possible to create loops using <code>Exclusive Split</code> and <code>Exclusive Merge</code> actions. These are comparable to defining <code>labels</code> and <code>goto</code> in more classical programming languages.</p>"},{"location":"Command%20Line%20Interface%20%28CLI%29/microflow-transformation/#goto","title":"Goto","text":""},{"location":"rules/","title":"Introduction","text":"<p>Linting rules are written in Rego and are used to lint Mendix projects.</p>"},{"location":"rules/create/","title":"Create Rule","text":""},{"location":"rules/create/#rego-introduction","title":"Rego Introduction","text":"<p>Policies are expressed with the help of the powerful OPA Rego language. Rego is a declarative language that is purpose-built for expressing policies over complex hierarchical data structures. Rego is designed to be easy to read and write, even for non-programmers. Rego is a safe language that is decidable and has a small trusted computing base. Rego is also designed to be easy to integrate with other systems.</p>"},{"location":"rules/create/#policy-rule","title":"Policy rule","text":"<p>To create a new policy, you need to create a new Rego file in the <code>policies</code> directory. The file name should be in the format <code>XXX_YYY.rego</code> where <code>XXX</code> is the policy number and <code>YYY</code> is the policy name. For example, <code>001_0001_anonymous_disabled.rego</code>.</p> <p>The policy file should contain the following structure:</p> <pre><code># METADATA\n# scope: package\n# title: Business apps must always require login\n# description: No anonymous means every user must have valid login session or credentials\n# authors:\n# - Xiwen Cheng &lt;x@cinaq.com&gt;\n# custom:\n#  category: Security\n#  rulename: AnonymousDisabled\n#  severity: HIGH\n#  rulenumber: 001_0001\n#  remediation: Disable anonymous/guest access in Project Security\n#  input: Security$ProjectSecurity.yaml\npackage app.mendix.project_settings.anonymous_disabled\nimport rego.v1\nannotation := rego.metadata.chain()[1].annotations\n\ndefault allow := false\nallow if count(errors) == 0\n\nerrors contains error if {\n    input.EnableGuestAccess == true\n    error := sprintf(\"[%v, %v, %v] %v\",\n        [\n            annotation.custom.severity,\n            annotation.custom.category,\n            annotation.custom.rulenumber,\n            annotation.title,\n        ]\n    )\n}\n</code></pre> <ul> <li><code>METADATA</code> provide information about the policy. </li> <li><code>package</code> statement is used to define the policy package. </li> <li><code>allow</code> statement is used to define the conditions under which the policy is allowed. </li> <li><code>errors</code> statement is used to define the errors that are returned if the policy is not allowed.</li> <li><code>input</code> states which files are used as input for the policy. This can be a single file or an expression like <code>*/DomainModels$DomainModel.yaml</code> to match multiple files.</li> </ul>"},{"location":"rules/create/#policy-testing","title":"Policy testing","text":"<p>The best way to create a new policy is to copy an existing policy and modify it to suit your needs. There is also an accompanying test file for each policy that you can use to test your policy. The test file should be in the same directory as the policy file and should be named <code>XXX_YYY_test.rego</code>. For example, <code>001_0001_anonymous_disabled_test.rego</code>.</p> <pre><code>package app.mendix.project_settings.anonymous_disabled\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\"EnableGuestAccess\": false}\n}\ntest_no_allow if {\n    not allow with input as {\"EnableGuestAccess\": true}\n}\n</code></pre> <p>To test your policy, run the following command:</p> <pre><code>$ ./run-policy-tests.sh              \npolicies/001_project_settings/001_0001_anonymous_disabled_test.rego:\ndata.app.mendix.project_settings.anonymous_disabled.test_allow: PASS (3.031209ms)\ndata.app.mendix.project_settings.anonymous_disabled.test_no_allow: PASS (413.375\u00b5s)\n\npolicies/001_project_settings/001_0002_demo_users_disabled_test.rego:\ndata.app.mendix.project_settings.demo_users_disabled.test_allow: PASS (105.541\u00b5s)\ndata.app.mendix.project_settings.demo_users_disabled.test_no_allow: PASS (200.5\u00b5s)\n\npolicies/001_project_settings/001_0003_security_checks_test.rego:\ndata.app.mendix.project_settings.security_checks.test_allow: PASS (111.584\u00b5s)\ndata.app.mendix.project_settings.security_checks.test_no_allow_1: PASS (842.667\u00b5s)\ndata.app.mendix.project_settings.security_checks.test_no_allow_2: PASS (206.458\u00b5s)\n\npolicies/001_project_settings/001_0004_strong_password_test.rego:\ndata.app.mendix.project_settings.strong_password.test_allow: PASS (148.792\u00b5s)\ndata.app.mendix.project_settings.strong_password.test_no_allow_password_length: PASS (538.959\u00b5s)\ndata.app.mendix.project_settings.strong_password.test_no_allow_simple: PASS (286.916\u00b5s)\n\npolicies/002_domain_model/002_0001_number_of_entities_test.rego:\ndata.app.mendix.domain_model.number_of_entities.test_no_entities: PASS (134\u00b5s)\ndata.app.mendix.domain_model.number_of_entities.test_1_entity: PASS (194.666\u00b5s)\ndata.app.mendix.domain_model.number_of_entities.test_2_entities: PASS (187.334\u00b5s)\ndata.app.mendix.domain_model.number_of_entities.test_20_entities: PASS (1.375709ms)\n\npolicies/002_domain_model/002_0002_number_of_attributes_test.rego:\ndata.app.mendix.domain_model.number_of_attributes.test_no_entities: PASS (263.5\u00b5s)\ndata.app.mendix.domain_model.number_of_attributes.test_1_entity_1_attribute: PASS (519.416\u00b5s)\ndata.app.mendix.domain_model.number_of_attributes.test_2_entities: PASS (303.458\u00b5s)\ndata.app.mendix.domain_model.number_of_attributes.test_3_entities_1_empty: PASS (342.958\u00b5s)\ndata.app.mendix.domain_model.number_of_attributes.test_1_entity_40_attributes_not_allowed: PASS (1.294166ms)\ndata.app.mendix.domain_model.number_of_attributes.test_2_entity_40_attributes_1_empty_not_allowed: PASS (2.156042ms)\n--------------------------------------------------------------------------------\nPASS: 20/20\n</code></pre> <p>The test rego files contain examples so that it's easy to validate your policy actually works for different scenarios with purpose-crafted input data. The test script will run all the test files in the <code>policies</code> directory and output the results.</p> <p>Example input could be inspected in the <code>modelsource</code> directory. The <code>modelsource</code> directory contains the exported Mendix model in Yaml format. The <code>modelsource</code> directory is created when you run the <code>export-model</code> command.</p>"},{"location":"rules/create/#resources","title":"Resources","text":"<ul> <li>Rego language reference</li> <li>Rego playground</li> <li>Rego testing</li> <li>Rego best practices</li> <li>Style guide</li> </ul>"},{"location":"rules/create/#help","title":"Help","text":"<p>We understand Rego is not the easiest language to use. However, it is the perfect match due to its expressiveness. If you need help creating a new policy, please reach out to us at support@cinaq.com.</p>"},{"location":"rules/001_project_settings/001_0001_anonymous_disabled/","title":"Business apps must always require login","text":"<p>Disable anonymous/guest access in Project Security</p>"},{"location":"rules/001_project_settings/001_0001_anonymous_disabled/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ninput: Security$ProjectSecurity.yaml\nrulename: AnonymousDisabled\nrulenumber: 4097\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"rules/001_project_settings/001_0001_anonymous_disabled/#description","title":"Description","text":"<p>No anonymous means every user must have valid login session or credentials</p>"},{"location":"rules/001_project_settings/001_0001_anonymous_disabled/#remediation","title":"Remediation","text":"<p>Disable anonymous/guest access in Project Security</p>"},{"location":"rules/001_project_settings/001_0001_anonymous_disabled/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.project_settings.anonymous_disabled\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\"EnableGuestAccess\": false}\n}\ntest_no_allow if {\n    not allow with input as {\"EnableGuestAccess\": true}\n}\n</code></pre>"},{"location":"rules/001_project_settings/001_0002_demo_users_disabled/","title":"Business apps should disable demo users","text":"<p>Disable demo users in Project Security</p>"},{"location":"rules/001_project_settings/001_0002_demo_users_disabled/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ninput: Security$ProjectSecurity.yaml\nrulename: DemoUsersDisabled\nrulenumber: 4098\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"rules/001_project_settings/001_0002_demo_users_disabled/#description","title":"Description","text":"<p>No demo users</p>"},{"location":"rules/001_project_settings/001_0002_demo_users_disabled/#remediation","title":"Remediation","text":"<p>Disable demo users in Project Security</p>"},{"location":"rules/001_project_settings/001_0002_demo_users_disabled/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.project_settings.demo_users_disabled\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\"EnableDemoUsers\": false}\n}\ntest_no_allow if {\n    not allow with input as {\"EnableDemoUsers\": true}\n}\n</code></pre>"},{"location":"rules/001_project_settings/001_0003_security_checks/","title":"Ensure security rules are active","text":"<p>Set Security check to production in Project Security</p>"},{"location":"rules/001_project_settings/001_0003_security_checks/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ninput: Security$ProjectSecurity.yaml\nrulename: SecurityChecks\nrulenumber: 4099\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"rules/001_project_settings/001_0003_security_checks/#description","title":"Description","text":"<p>Any serious app needs entity access security configured</p>"},{"location":"rules/001_project_settings/001_0003_security_checks/#remediation","title":"Remediation","text":"<p>Set Security check to production in Project Security</p>"},{"location":"rules/001_project_settings/001_0003_security_checks/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.project_settings.security_checks\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\n        \"CheckSecurity\": true,\n        \"SecurityLevel\": \"CheckEverything\",\n    }\n}\ntest_no_allow_1 if {\n    not allow with input as {\n        \"CheckSecurity\": false,\n        \"SecurityLevel\": \"CheckEverything\",\n    }\n}\ntest_no_allow_2 if {\n    not allow with input as {\n        \"CheckSecurity\": true,\n        \"SecurityLevel\": \"unknown\",\n    }\n}\n</code></pre>"},{"location":"rules/001_project_settings/001_0004_strong_password/","title":"Strong password policy","text":"<p>Ensure minimum password length of at least 8 characters and must use all character classes.</p>"},{"location":"rules/001_project_settings/001_0004_strong_password/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ninput: Security$ProjectSecurity.yaml\npriority: 5\nrulename: StrongPasswordPolicy\nrulenumber: 4100\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"rules/001_project_settings/001_0004_strong_password/#description","title":"Description","text":"<p>Bruteforce is quite common. Ensure passwords are very strong.</p>"},{"location":"rules/001_project_settings/001_0004_strong_password/#remediation","title":"Remediation","text":"<p>Ensure minimum password length of at least 8 characters and must use all character classes.</p>"},{"location":"rules/001_project_settings/001_0004_strong_password/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.project_settings.strong_password\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\n        \"PasswordPolicySettings\": {\n            \"MinimumLength\": 9,\n            \"RequireDigit\": true,\n            \"RequireSymbol\": true,\n            \"RequireMixedCase\": true,\n        }\n    }\n}\n\ntest_no_allow_password_length if {\n    not allow with input as {\n        \"PasswordPolicySettings\": {\n            \"MinimumLength\": 3,\n            \"RequireDigit\": true,\n            \"RequireSymbol\": true,\n            \"RequireMixedCase\": true,\n        }\n    }\n}\n\ntest_no_allow_simple if {\n    not allow with input as {\n        \"PasswordPolicySettings\": {\n            \"MinimumLength\": 3,\n            \"RequireDigit\": false,\n            \"RequireSymbol\": true,\n            \"RequireMixedCase\": false,\n        }\n    }\n}\n</code></pre>"},{"location":"rules/002_domain_model/002_0001_number_of_entities/","title":"No more than 15 persistent entities within one domain model","text":"<p>Split domain model into multiple modules.</p>"},{"location":"rules/002_domain_model/002_0001_number_of_entities/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Maintainability\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: NumberOfEntities\nrulenumber: 8193\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/002_domain_model/002_0001_number_of_entities/#description","title":"Description","text":"<p>The bigger the domain models, the harder they will be to maintain. It adds complexity to your security model as well. The smaller the modules, the easier to reuse.</p>"},{"location":"rules/002_domain_model/002_0001_number_of_entities/#remediation","title":"Remediation","text":"<p>Split domain model into multiple modules.</p>"},{"location":"rules/002_domain_model/002_0001_number_of_entities/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.domain_model.number_of_entities\nimport rego.v1\n\n\n# Test data\nentity_attr_0 = {\n    \"Name\": \"Entity1\",\n}\n\n\ntwenty := numbers.range(1, 20)\nentities_20 = [ \n    { \"Name\": entity_attr_0.Name }  | n := twenty[_]\n]\n\n\n# Test cases\ntest_no_entities if {\n    allow with input as {\"Entities\": null}\n}\n\ntest_1_entity if {\n    allow with input as {\"Entities\": [entity_attr_0]}\n}\n\ntest_2_entities if {\n    allow with input as {\"Entities\": [entity_attr_0, entity_attr_0]}\n}\n\ntest_20_entities if {\n    not allow with input as {\"Entities\": entities_20}\n}\n</code></pre>"},{"location":"rules/002_domain_model/002_0002_number_of_attributes/","title":"No more that 35 attributes in an entity","text":"<p>Normalize your datamodel. Split your object into multiple objects. If the attributes really belong to each other in a one-to-one relation, just draw a one-to-one relation between the objects.</p>"},{"location":"rules/002_domain_model/002_0002_number_of_attributes/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Maintainability\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: NumberOfAttributes\nrulenumber: 8194\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/002_domain_model/002_0002_number_of_attributes/#description","title":"Description","text":"<p>The bigger the entities, the slower your application will become when handling the data. This is because Mendix is using SELECT * queries a lot and will retrieve a lot of unnecessary data.</p>"},{"location":"rules/002_domain_model/002_0002_number_of_attributes/#remediation","title":"Remediation","text":"<p>Normalize your datamodel. Split your object into multiple objects. If the attributes really belong to each other in a one-to-one relation, just draw a one-to-one relation between the objects.</p>"},{"location":"rules/002_domain_model/002_0002_number_of_attributes/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.domain_model.number_of_attributes\nimport rego.v1\n\n\n# Test data\nattribute1 = {\n    \"Name\": \"Attribute1\"\n}\n\nentity_attr_0 = {\n    \"Name\": \"Entity1\",\n    \"Attributes\": null,\n}\n\nentity_attr_1 = {\n    \"Name\": \"Entity1\",\n    \"Attributes\": [\n        attribute1\n    ]\n}\n\nforty := numbers.range(1, 40)\nattributes_40 = [ \n    { \"Name\": attribute1.Name }  | n := forty[_]\n]\n\nentity_1_attr_40 = {\n    \"Name\": \"Entity1\",\n    \"Attributes\": attributes_40,\n}\n\n\n# Test cases\ntest_no_entities if {\n    allow with input as {\"Entities\": null}\n}\n\ntest_1_entity_1_attribute if {\n    allow with input as {\"Entities\": [entity_attr_1]}\n}\n\ntest_2_entities if {\n    allow with input as {\"Entities\": [entity_attr_1, entity_attr_1]}\n}\n\ntest_3_entities_1_empty if {\n    allow with input as {\"Entities\": [entity_attr_1, entity_attr_1, entity_attr_0]}\n}\n\ntest_1_entity_40_attributes_not_allowed if {\n    not allow with input as {\"Entities\": [entity_1_attr_40]}\n}\n\ntest_2_entity_40_attributes_1_empty_not_allowed if {\n    not allow with input as {\"Entities\": [entity_1_attr_40, entity_1_attr_40, entity_attr_0]}\n}\n</code></pre>"},{"location":"rules/002_domain_model/002_0003_inherit_from_administration_account/","title":"Inherit from Administration.Account","text":"<p>Inherit from system.user instead or adapt Administration.Account so it fits your needs.</p>"},{"location":"rules/002_domain_model/002_0003_inherit_from_administration_account/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Performance\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvioidInheritanceFromAdministrationAccount\nrulenumber: 8195\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/002_domain_model/002_0003_inherit_from_administration_account/#description","title":"Description","text":"<p>There is no need to inherit from administration.account. Administration.account may simply be extended, this is not a system module. Avoid unnecessary inheritance as this has a negative effect on performance.</p>"},{"location":"rules/002_domain_model/002_0003_inherit_from_administration_account/#remediation","title":"Remediation","text":"<p>Inherit from system.user instead or adapt Administration.Account so it fits your needs.</p>"},{"location":"rules/002_domain_model/002_0003_inherit_from_administration_account/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.domain_model.inherit_from_administration_account\nimport rego.v1\n\n\n# Test data\nentity_negative = {\n    \"Name\": \"Entity1\",\n    \"MaybeGeneralization\": {\n        \"Type\": \"DomainModels$Generalization\",\n        \"Generalization\": \"System.FileDocument\"\n    }\n}\n\nentity_positive = {\n    \"Name\": \"Entity2\",\n    \"MaybeGeneralization\": {\n        \"Type\": \"DomainModels$Generalization\",\n        \"Generalization\": \"Administration.Account\"\n    }\n}\n\n\nentities_mixed = [entity_negative, entity_positive]\n\n\n# Test cases\ntest_no_entities if {\n    allow with input as {\"Entities\": null}\n}\n\ntest_entity_negative if {\n    allow with input as {\"Entities\": [entity_negative]}\n}\n\ntest_entity_positive if {\n    not allow with input as {\"Entities\": [entity_positive]}\n}\n\ntest_entities_mixed if {\n    not allow with input as {\"Entities\": entities_mixed}\n}\n</code></pre>"},{"location":"rules/002_domain_model/002_0004_inherit_from_non_system/","title":"Inherit from non System module is discouraged","text":"<p>Instead of inheritance, just use separate objects which are associated to the main object. As an alternative, you can add the child\u2019s attributes to the super entity and add an ObjectType enumeration.</p>"},{"location":"rules/002_domain_model/002_0004_inherit_from_non_system/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Performance\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvoidInheritanceFromNonSystem\nrulenumber: 8196\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/002_domain_model/002_0004_inherit_from_non_system/#description","title":"Description","text":"<p>Inheritance, except from system module, is strongly discouraged because of the negative performance side effects.</p>"},{"location":"rules/002_domain_model/002_0004_inherit_from_non_system/#remediation","title":"Remediation","text":"<p>Instead of inheritance, just use separate objects which are associated to the main object. As an alternative, you can add the child\u2019s attributes to the super entity and add an ObjectType enumeration.</p>"},{"location":"rules/002_domain_model/002_0004_inherit_from_non_system/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.domain_model.inherit_from_non_system\nimport rego.v1\n\n\n# Test data\nentity_negative = {\n    \"Name\": \"Entity1\",\n    \"MaybeGeneralization\": {\n        \"Type\": \"DomainModels$Generalization\",\n        \"Generalization\": \"System.FileDocument\"\n    }\n}\n\nentity_positive = {\n    \"Name\": \"Entity2\",\n    \"MaybeGeneralization\": {\n        \"Type\": \"DomainModels$Generalization\",\n        \"Generalization\": \"Administration.Account\"\n    }\n}\n\n\nentities_mixed = [entity_negative, entity_positive]\n\n\n# Test cases\ntest_no_entities if {\n    allow with input as {\"Entities\": null}\n}\n\ntest_entity_negative if {\n    allow with input as {\"Entities\": [entity_negative]}\n}\n\ntest_entity_positive if {\n    not allow with input as {\"Entities\": [entity_positive]}\n}\n\ntest_entities_mixed if {\n    not allow with input as {\"Entities\": entities_mixed}\n}\n</code></pre>"},{"location":"rules/002_domain_model/002_0005_avoid_system_entity_association/","title":"Avoid using system storage objects directly","text":"<p>Remove direct associations with the System Domain Model. Use inheritance instead (i.e. Generalization in the entity properties).</p>"},{"location":"rules/002_domain_model/002_0005_avoid_system_entity_association/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvoidSystemEntityAssociation\nrulenumber: 8197\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"rules/002_domain_model/002_0005_avoid_system_entity_association/#description","title":"Description","text":"<p>Always inherit for filedocuments and images. Never implement direct assocations to the System Domain Model, because of limits on the configuration of security.</p>"},{"location":"rules/002_domain_model/002_0005_avoid_system_entity_association/#remediation","title":"Remediation","text":"<p>Remove direct associations with the System Domain Model. Use inheritance instead (i.e. Generalization in the entity properties).</p>"},{"location":"rules/002_domain_model/002_0005_avoid_system_entity_association/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.domain_model.avoid_system_entity_association\nimport rego.v1\n\n\n# Test data\nnegative = {\n    \"Name\": \"HELLO_THERE1\",\n    \"Child\": \"SomeModule.FileDocument\",\n}\n\npositive = {\n    \"Name\": \"HELLO_THERE2\",\n    \"Child\": \"System.FileDocument\",\n}\n\n\n# Test cases\n\ntest_no_cross_associations if {\n    allow with input as {\"CrossAssociations\": null}\n}\n\ntest_negative if {\n    allow with input as {\"CrossAssociations\": [negative]}\n}\n\ntest_positive if {\n    not allow with input as {\"CrossAssociations\": [positive]}\n}\n\ntest_mixed if {\n    not allow with input as {\"CrossAssociations\": [negative, positive]}\n}\n</code></pre>"},{"location":"rules/002_domain_model/002_0006_avoid_too_many_virtual_attributes/","title":"Too many Microflow attributes (virtual attributes) inside of an entity","text":"<p>Optimize the number of virtual attributes inside of an entity. Reduce to 10 or less.</p>"},{"location":"rules/002_domain_model/002_0006_avoid_too_many_virtual_attributes/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Performance\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvoidTooManyVirtualAttributes\nrulenumber: 8198\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/002_domain_model/002_0006_avoid_too_many_virtual_attributes/#description","title":"Description","text":"<p>Too many Microflow attributes (virtual attributes) inside of an entity will cause performance issues.</p>"},{"location":"rules/002_domain_model/002_0006_avoid_too_many_virtual_attributes/#remediation","title":"Remediation","text":"<p>Optimize the number of virtual attributes inside of an entity. Reduce to 10 or less.</p>"},{"location":"rules/002_domain_model/002_0006_avoid_too_many_virtual_attributes/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.domain_model.avoid_too_many_virtual_attributes\n\nimport rego.v1\n\n\n# Test data\n\n\nattr_0 := {\n          \"$Type\": \"DomainModels$Attribute\",\n          \"Name\": \"VA_age\",\n          \"Value\": {\n            \"$Type\": \"DomainModels$CalculatedValue\"\n          }\n}\n\n\ntwenty := numbers.range(1, 20)\nattr_20 = [ \n    { \"Name\": attr_0.Name, \"Value\": attr_0.Value }  | n := twenty[_]\n]\n\npositive := {\n  \"Entities\": [\n    {\n      \"$Type\": \"DomainModels$EntityImpl\",\n      \"Attributes\": [\n        {\n          \"$Type\": \"DomainModels$Attribute\",\n          \"Name\": \"VA_age\",\n          \"Value\": {\n            \"$Type\": \"DomainModels$CalculatedValue\"\n          }\n        },\n        {\n          \"$Type\": \"DomainModels$Attribute\",\n          \"Name\": \"Year\",\n          \"Value\": {\n            \"$Type\": \"DomainModels$StoredValue\"\n          }\n        }\n      ],\n      \"Name\": \"Bike\"\n    }\n  ]\n}\n\nnegative := {\n  \"Entities\": [\n    {\n      \"$Type\": \"DomainModels$EntityImpl\",\n      \"Attributes\": attr_20,\n      \"Name\": \"Bike\"\n    }\n  ]\n}\n\n# Test cases\n\ntest_positive if {\n    allow with input as positive\n}\n\ntest_negative if {\n    not allow with input as negative\n}\n</code></pre>"},{"location":"rules/002_domain_model/002_0007_avoid_using_validation_rules/","title":"Avoid using validation rules for domain model.","text":"<p>Remove datamodel validation rules.</p>"},{"location":"rules/002_domain_model/002_0007_avoid_using_validation_rules/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Viktor Berlov &lt;viktor@cinaq.com&gt;\ncategory: Maintainability\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvoidUsingValidationRules\nrulenumber: 8199\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/002_domain_model/002_0007_avoid_using_validation_rules/#description","title":"Description","text":"<p>Validation rules on domain model level will give the users unexpected errors.</p>"},{"location":"rules/002_domain_model/002_0007_avoid_using_validation_rules/#remediation","title":"Remediation","text":"<p>Remove datamodel validation rules.</p>"},{"location":"rules/002_domain_model/002_0007_avoid_using_validation_rules/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.domain_model.avoid_using_validation_rules\n\nimport rego.v1\n\n\n# Test data\n\npositive := {\n  \"Entities\": [\n    {\n      \"ValidationRules\": [],\n      \"Name\": \"Bike\"\n    }\n  ]\n}\n\nnegative := {\n  \"Entities\": [\n    {\n      \"ValidationRules\": [\n        {\n          \"$Type\": \"DomainModels$ValidationRule\",\n          \"Attribute\": \"MyFirstModule.Bike.Name\",\n          \"Message\": {\n            \"$Type\": \"Texts$Text\",\n            \"Items\": [\n              {\n                \"$Type\": \"Texts$Translation\",\n                \"LanguageCode\": \"en_US\",\n                \"Text\": \"Not a good name\"\n              }\n            ]\n          },\n          \"RuleInfo\": {\n            \"$Type\": \"DomainModels$EqualsToRuleInfo\",\n            \"EqualsToAttribute\": \"\",\n            \"UseValue\": true,\n            \"Value\": \"admin\"\n          }\n        }\n      ],\n      \"Name\": \"Bike\"\n    }\n  ]\n}\n\n# Test cases\n\ntest_positive if {\n    allow with input as positive\n}\n\ntest_negative if {\n    not allow with input as negative\n}\n</code></pre>"},{"location":"rules/003_modules/003_0001_number_of_modules/","title":"More than 20 modules in project","text":"<p>Consider a multi-app stategy to avoid creating one big (unmaintainable) monstrous application.</p>"},{"location":"rules/003_modules/003_0001_number_of_modules/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Maintainability\ninput: Metadata.yaml\nrulename: NumberOfModules\nrulenumber: 12289\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/003_modules/003_0001_number_of_modules/#description","title":"Description","text":"<p>The bigger the application, the harder to maintain.</p>"},{"location":"rules/003_modules/003_0001_number_of_modules/#remediation","title":"Remediation","text":"<p>Consider a multi-app stategy to avoid creating one big (unmaintainable) monstrous application.</p>"},{"location":"rules/003_modules/003_0001_number_of_modules/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.modules.number_of_modules\nimport rego.v1\n\n\n# Test data\nmodule = {\n    \"Name\": \"Module\",\n    \"Attributes\": {\n        \"FromAppStore\": false,\n    }\n}\n\n\nthirty := numbers.range(1, 30)\nmodules_30 = [ \n    module | n := thirty[_]\n]\n\n\n# Test cases\ntest_empty if {\n    allow with input as {\"Modules\": null}\n}\n\ntest_1_module if {\n    allow with input as {\"Modules\": [module]}\n}\n\ntest_2_modules if {\n    allow with input as {\"Modules\": [module, module]}\n}\n\ntest_30_modules if {\n    not allow with input as {\"Modules\": modules_30}\n}\n</code></pre>"},{"location":"rules/004_pages/004_0001_inline_style_property_used/","title":"Inline style property used","text":"<p>Use generic classes instead, defined by the theme.</p>"},{"location":"rules/004_pages/004_0001_inline_style_property_used/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Maintainability\ninput: '*/**/*$Page.yaml'\nrulename: InlineStylePropertyUsed\nrulenumber: 16385\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/004_pages/004_0001_inline_style_property_used/#description","title":"Description","text":"<p>Avoid using the style property, because this will make the life of your UI designer a lot more complicated. It will be harder to overrule styles from CSS file level.</p>"},{"location":"rules/004_pages/004_0001_inline_style_property_used/#remediation","title":"Remediation","text":"<p>Use generic classes instead, defined by the theme.</p>"},{"location":"rules/004_pages/004_0001_inline_style_property_used/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.pages.inline_style_property_used\nimport rego.v1\n\n\n# Test data\nform_simple = {\n    \"$Type\": \"Forms$Page\",\n    \"Name\": \"Page1\",\n    \"Appearance\": {\n        \"$Type\": \"Forms$Appearance\",\n        \"Class\": \"\",\n        \"DesignProperties\": null,\n        \"DynamicClasses\": \"\",\n        \"Style\": \"\",\n    },\n}\nform_simple_negative = {\n    \"$Type\": \"Forms$Page\",\n    \"Name\": \"Page1\",\n    \"Appearance\": {\n        \"$Type\": \"Forms$Appearance\",\n        \"Class\": \"\",\n        \"DesignProperties\": null,\n        \"DynamicClasses\": \"\",\n        \"Style\": \"color: red;\",\n    },\n}\n\nform_nested = {\n    \"Name\": \"Page1\",\n    \"FormCall\": {\n        \"Arguments\": [\n            {\n                \"Widgets\": [\n                    {\n                        \"$Type\": \"Forms$LayoutGrid\",\n                        \"Name\": \"layoutGrid2\",\n                        \"Rows\": [\n                            {\n                                \"$Type\": \"Forms$LayoutGridRow\",\n                                \"Columns\": [\n                                    {\n                                        \"$Type\": \"Forms$LayoutGridColumn\",\n                                        \"Appearance\": {\n                                            \"$Type\": \"Forms$Appearance\",\n                                            \"Class\": \"\",\n                                            \"DesignProperties\": null,\n                                            \"DynamicClasses\": \"\",\n                                            \"Style\": \"\",\n                                        }\n                                    },\n                                ],\n                            },\n                        ],\n                    },\n                ],\n            },\n        ],\n    },\n}\n\nform_nested_negative = {\n    \"Name\": \"Page1\",\n    \"FormCall\": {\n        \"Arguments\": [\n            {\n                \"Widgets\": [\n                    {\n                        \"$Type\": \"Forms$LayoutGrid\",\n                        \"Name\": \"layoutGrid2\",\n                        \"Rows\": [\n                            {\n                                \"$Type\": \"Forms$LayoutGridRow\",\n                                \"Columns\": [\n                                    {\n                                        \"$Type\": \"Forms$LayoutGridColumn\",\n                                        \"Appearance\": {\n                                            \"$Type\": \"Forms$Appearance\",\n                                            \"Class\": \"\",\n                                            \"DesignProperties\": null,\n                                            \"DynamicClasses\": \"\",\n                                            \"Style\": \"color: orange;\",\n                                        }\n                                    },\n                                ],\n                            },\n                        ],\n                    },\n                ],\n            },\n        ],\n    },\n}\n\n\n\n# Test cases\ntest_simple if {\n    allow with input as form_simple\n}\n\ntest_simple_negative if {\n    not allow with input as form_simple_negative\n}\n\ntest_nested if {\n    allow with input as form_nested\n}\n\ntest_nested_negative if {\n    not allow with input as form_nested_negative\n}\n</code></pre>"},{"location":"rules/005_microflows/005_0001_empty_string_check_not_complete/","title":"Empty String check not complete","text":"<p>Always check a string for empty based on != empty and != \"\". The first one equals database NULL value, the latter one indicates a truncated string.</p>"},{"location":"rules/005_microflows/005_0001_empty_string_check_not_complete/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Error\ninput: '*/**/*$Microflow.yaml'\nrulename: EmptyStringCheckNotComplete\nrulenumber: 20481\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"rules/005_microflows/005_0001_empty_string_check_not_complete/#description","title":"Description","text":"<p>Technically, there is a difference between empty and \"\". Make sure to check them both.</p>"},{"location":"rules/005_microflows/005_0001_empty_string_check_not_complete/#remediation","title":"Remediation","text":"<p>Always check a string for empty based on != empty and != \"\". The first one equals database NULL value, the latter one indicates a truncated string.</p>"},{"location":"rules/005_microflows/005_0001_empty_string_check_not_complete/#test-cases","title":"Test cases","text":"<pre><code>package app.mendix.microflows.empty_string_check_not_complete\nimport rego.v1\n\n\n# Test data\nmicroflow_good = {\n    \"$Type\": \"Microflow$Page\",\n    \"Name\": \"mf1\",\n    \"ObjectCollection\": {\n        \"$Type\": \"Microflows$MicroflowObjectCollection\",\n        \"Objects\": [\n            {\n                \"$Type\": \"Microflows$ExclusiveSplit\",\n                \"SplitCondition\": {\n                    \"$Type\": \"Microflows$ExpressionSplitCondition\",\n                    \"Expression\": \"$Variable != empty and $Variable != ''\",\n                },\n            },\n        ],\n    },\n}\n\nmicroflow_bad = {\n    \"$Type\": \"Microflow$Page\",\n    \"Name\": \"mf1\",\n    \"ObjectCollection\": {\n        \"$Type\": \"Microflows$MicroflowObjectCollection\",\n        \"Objects\": [\n            {\n                \"$Type\": \"Microflows$ExclusiveSplit\",\n                \"SplitCondition\": {\n                    \"$Type\": \"Microflows$ExpressionSplitCondition\",\n                    \"Expression\": \"$Variable != ''\",\n                },\n            },\n        ],\n    },\n}\n\n# Test cases\ntest_simple if {\n    allow with input as microflow_good\n}\n\ntest_simple_negative if {\n    not allow with input as microflow_bad\n}\n</code></pre>"}]}